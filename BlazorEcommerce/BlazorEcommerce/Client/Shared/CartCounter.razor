@inject ICartService cartRepository
@inject ISyncLocalStorageService localStorage
@implements IDisposable

<a href="cart" class="btn btn-outline-info text-decoration-none position-relative">
	<i class="oi oi-cart"></i>
	@if (GetCartItemsCount() > 0)
	{
		<span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">@GetCartItemsCount()</span>
	}
</a>

@code {
	private int GetCartItemsCount()
	{
		var cart = localStorage.GetItem<IEnumerable<CartItem>>("cart");
		return cart != null ? cart.Select(c => c.Quantity).Sum() : 0;
	}

	protected override void OnInitialized()
	{
		cartRepository.OnChange += StateHasChanged;
	}

	public void Dispose()
	{
		cartRepository.OnChange -= StateHasChanged;
	}
}
