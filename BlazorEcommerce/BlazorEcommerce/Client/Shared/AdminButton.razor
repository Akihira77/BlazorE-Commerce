@inject ILocalStorageService localStorage
@inject NavigationManager navigationManager
@inject AuthenticationStateProvider authenticationStateProvider

<div class="d-flex align-items-center ms-auto" style="margin-right: 5em">
	<div class="dropdown">
		<button @onclick="ToggleUserMenu"
				@onfocusout="HideUserMenu"
	   class="btn btn-secondary dropdown-toggle user-button">
			<i class="oi oi-person"></i>
		</button>
		<div class="dropdown-menu dropdown-menu-start @UserMenuCssClass">
			<a href="profile" class="dropdown-item ms-0">Profile</a>
			<button class="logout dropdown-item" @onclick="Logout">Logout</button>
		</div>
	</div>
</div>
@code {
	private bool showUserMenu = false;

	private string? UserMenuCssClass => showUserMenu ? "show-menu" : null;

	private void ToggleUserMenu()
	{
		showUserMenu = !showUserMenu;
	}

	private async Task HideUserMenu()
	{
		await Task.Delay(200);
		showUserMenu = false;
	}

	private async Task Logout()
	{
		await localStorage.RemoveItemAsync("authToken");
		await localStorage.RemoveItemAsync("cartItemsCount");
		await authenticationStateProvider.GetAuthenticationStateAsync();
		navigationManager.NavigateTo("");
	}
}
