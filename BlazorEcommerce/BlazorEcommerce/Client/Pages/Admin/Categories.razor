@page "/admin/categories"
@inject ICategoryService categoryService
@attribute [Authorize(Roles = "Admin")]
@implements IDisposable

<h3>Categories</h3>

<div class="header">
	<div class="col">Name</div>
	<div class="col">Url</div>
	<div class="col">Visible</div>
	<div class="col"></div>
</div>

@foreach(var category in categoryService.AdminCategories)
{
	@if(category.Editing)
	{
		<EditForm Model="editingCategory" OnSubmit="UpdateCategory">
			<div class="row">
				<div class="col">
					<InputText @bind-Value="editingCategory.Name" class="form-control" />
				</div>
				<div class="col">
					<InputText @bind-Value="editingCategory.Url" class="form-control" />
				</div>
				<div class="col col-visible">
					<InputCheckbox @bind-Value="editingCategory.Visible" class="big-checkbox" style="transform : scale(2,2);" />
				</div>
				<div class="col">
					<button type="submit" class="btn btn-success">
						<i class="oi oi-cloud-upload"></i>
					</button>
					<button class="btn btn-danger" @onclick="CancelEditing">
						<i class="oi oi-circle-x"></i>
					</button>
				</div>
			</div>
		</EditForm>
	} else
	{
		<div class="row">
			<div class="col">
				@category.Name
			</div>
			<div class="col">
				@category.Url
			</div>
			<div class="col col-visible">
				@if(category.Visible)
				{
					<i class="oi oi-check" style="transform : scale(1.5, 1.5);"></i>
				} 
				@*<span>@(category.Visible ? "✔️" : "")</span>*@
			</div>
			<div class="col">
				<button class="btn btn-primary" @onclick=@(() => EditCategory(category))>
					<i class="oi oi-pencil"></i>
				</button>
				<button class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#exampleModal" @onclick="@(() => editingCategory = category)">
					<i class="oi oi-trash"></i>
				</button>

				<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
					<div class="modal-dialog modal-dialog-centered">
						<div class="modal-content">
							<div class="modal-header">
								<h1 class="modal-title fs-5" id="exampleModalLabel">Delete Confirmation</h1>
								<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
							</div>
							<div class="modal-body">
								Do you want to Delete <span class="fw-bold">@(editingCategory != null ? editingCategory.Name : null)?</span>
							</div>
							<div class="modal-footer">
								<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
								<button type="button" class="btn btn-danger" @onclick=@(() => DeleteCategory(editingCategory.Id))>Delete</button>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	}
}

<button class="btn btn-primary my-5" @onclick="CreateNewCategory">
	<i class="oi oi-plus"></i> Add New Category
</button>

@code {
	Category editingCategory = null;

	protected override async Task OnInitializedAsync()
	{
		await categoryService.GetAdminCategories();
		categoryService.OnChange += StateHasChanged;
	}

	public void Dispose()
	{
		categoryService.OnChange -= StateHasChanged;
	}

	private void CreateNewCategory()
	{
		editingCategory = categoryService.CreateNewCategory();
	}

	private void EditCategory(Category category)
	{
		category.Editing = true;
		editingCategory = category;
	}

	private async Task UpdateCategory()
	{
		if (editingCategory.IsNew)
		{
			await categoryService.AddCategory(editingCategory);
		} else
		{
			await categoryService.UpdateCategory(editingCategory);
		}
		editingCategory = new Category();
	}

	private async Task CancelEditing()
	{
		editingCategory = new Category();
		await categoryService.GetAdminCategories();
	}

	private async Task DeleteCategory(int id)
	{
		await categoryService.DeleteCategory(id);
	}
}
