@page "/login"
@inject IAuthService authService
@inject ILocalStorageService localStorage
@inject AuthenticationStateProvider authenticationStateProvider
@inject NavigationManager navigationManager
@inject ISnackbar snackbar
@inject ICartService cartService

<PageTitle>Login</PageTitle>
<EditForm class="container d-flex flex-column" Model="user" OnValidSubmit="HandleLogin">
	<DataAnnotationsValidator />

	<div class="mb-3">
		<label for="email">Email</label>
		<InputText id="email" @bind-Value="user.Email" class="form-control" />
		<ValidationMessage For="() => user.Email" />
	</div>
	<div class="mb-3">
		<label for="password">Password</label>
		<div class="mt-1 input-group">
			<InputText type="@txtType" id="password"
					   @bind-Value="user.Password" class="form-control" />
			<button type="button" class="input-group-text oi oi-eye top-0" @onclick="ShowPassword"></button>
		</div>
	</div>
	<ValidationMessage For="() => user.Password" />

	<div class="ms-auto">
		<button type="button"
	   class="mr-3 btn btn-primary"
				@onclick="@(() => navigationManager.NavigateTo("/register"))">
			Register
		</button>
		<button type="submit" class="ms-auto btn btn-primary">Login</button>
	</div>
</EditForm>

@code {
	private UserLogin user = new UserLogin();
	//private ItemsLocalStorage item = new();

	private string errorMessage = string.Empty;
	string txtType = "password";

	private async Task HandleLogin()
	{
		var result = await authService.Login(user);
		snackbar.Configuration.SnackbarVariant = Variant.Text;
		if (result.Success)
		{
			errorMessage = string.Empty;
			//item.Value = result.Data;
			//item.Expiry = result.Message;
			await localStorage.SetItemAsync("authToken", result.Data);
			await authenticationStateProvider.GetAuthenticationStateAsync();
			await cartService.StoreCartItems(true);

			navigationManager.NavigateTo("");
			snackbar.Add($"Welcome {user.Email}", Severity.Success);
		} else
		{
			snackbar.Add($"Wrong password", Severity.Error);
		}
	}

	private void ShowPassword()
	{
		if(txtType == "password")
		{
			txtType = "text";
		} else
		{
			txtType = "password";
		}
	}
}
