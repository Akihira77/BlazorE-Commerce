@page "/orders"
@inject IUnitOfService unitOfService
@attribute [Authorize]

@if(orders == null)
{
	<span>Loading your orders...</span>
} else if (orders.Count <= 0)
{
	<span>You have no orders, yet...</span>
} else {
	foreach(var order in orders)
	{
		<div class="container d-flex rounded border p-2 mb-3">
			<div class="image-wrapper text-center">
				<img src="@order.ProductImageUrl" class="image p-1"/>
			</div>
			<div class="details flex-grow-1 p-1 d-flex flex-column">
				<h4>@order.Product</h4>
				<span>@order.OrderDate.ToString("f")</span><br />
				<a class="align-items-bottom link-primary text-decoration-underline" href="orders/@order.Id">Show more...</a>
			</div>
			<div class="order-price fw-bold text-end pt-3 pe-3">
				$@order.TotalPrice
			</div>
		</div>
	}
}

@code {
	List<OrderOverviewDto> orders = new List<OrderOverviewDto>();

	protected override async Task OnInitializedAsync()
	{
		orders = await unitOfService.Order.GetOrders();
	}
}
