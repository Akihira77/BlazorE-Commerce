@page "/orders"
@inject IOrderService orderService
@implements IDisposable
@attribute [Authorize]

@if(orders == null)
{
	<div class="container-fluid d-flex justify-content-center align-items-center" style="min-height: 70vh">
		<MudProgressCircular Color="Color.Primary" Indeterminate="true" />
	</div>
} else if (orders.Count <= 0)
{
	<span>You have no orders, yet...</span>
} else {
	<Virtualize Items="orders" Context="order">
		<div class="container d-flex rounded border p-2 mb-3">
			<div class="image-wrapper text-center">
				<img src="@order.ProductImageUrl" class="image p-1"/>
			</div>
			<div class="details flex-grow-1 p-1 d-flex flex-column">
				<h4>@order.Product</h4>
				<span>@order.OrderDate.ToString("f")</span><br />
				<a class="align-items-bottom link-primary text-decoration-underline" href="orders/@order.Id">Show more...</a>
			</div>
			<div class="order-price fw-bold text-end pt-0 pe-3">
				<div>
					<MudTooltip Text="@GetMessage(order.OrderStatus)">
						<div class="order-status p-1 text-white @GetStatusCss(order.OrderStatus) rounded" style="font-size: 14px">
							@GetStatus(order.OrderStatus)
						</div>
					</MudTooltip>
				</div>
				$@order.TotalPrice
			</div>
		</div>
	</Virtualize>
}

@code {
	List<OrderOverviewDto> orders = new List<OrderOverviewDto>();

	protected override async Task OnInitializedAsync()
	{
		orders = await orderService.GetOrders();
		orderService.OnChange += StateHasChanged;
	}

	public void Dispose()
	{
		orderService.OnChange -= StateHasChanged;
	}

	private string GetMessage(int orderStatus)
	{
		switch(orderStatus)
		{
			case -1:
				return "Your order was cancelled";
			case 1:
				return "Your order has been delivered";
			default:
				return "Your order status is in processing";
		}
	}

	private string GetStatus(int orderStatus)
	{
		switch(orderStatus)
		{
			case -1:
				return "Cancelled";
			case 1:
				return "Delivered";
			default:
				return "Processing";
		}
	}

	private string GetStatusCss(int orderStatus)
	{
		switch(orderStatus)
		{
			case -1:
				return "bg-danger";
			case 1:
				return "bg-success";
			default:
				return "bg-warning";
		}
	}
}
